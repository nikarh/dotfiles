version: '3.5'
x-logging: &logging
  driver: "json-file"
  options:
    max-size: ${LOG_MAX_SIZE:-200k}
    max-file: ${LOG_MAX_FILE:-5}
x-service-defaults: &service-defaults
  restart: unless-stopped
  logging: *logging
  healthcheck:
    disable: true
services:
  minio:
    image: quay.io/minio/minio
    container_name: minio
    << : *service-defaults
    user: "1000:1000"
    environment:
      MINIO_ROOT_USER: ROOTUSER
      MINIO_ROOT_PASSWORD: CHANGEME123
    volumes:
      - /var/data/shares/minio:/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.minio.loadbalancer.server.port=8080'
      - 'traefik.http.routers.minio.rule=Host(`minio.${DOMAIN}`)'
      - 'traefik.http.routers.minio.entrypoints=https'
      - 'traefik.http.routers.minio.service=minio'
      - 'traefik.http.routers.minio.middlewares=authelia@docker'
      - 'traefik.http.services.minio-api.loadbalancer.server.port=9000'
      - 'traefik.http.routers.minio-api.rule=Host(`api.minio.${DOMAIN}`)'
      - 'traefik.http.routers.minio-api.entrypoints=https'
      - 'traefik.http.routers.minio-api.service=minio-api'
      - 'traefik.http.routers.minio-api.middlewares=authelia@docker'
    command:
      - server
      - /data
      - --console-address
      - :8080
  samba:
    build: docker/samba
    container_name: samba
    << : *service-defaults
    ports:
      - 137:137/udp # nmbd
      - 138:138/udp # nmbd
      - 139:139 # smb over netbios
      - 445:445 # smb over tcp
    entrypoint: /run.sh
    volumes:
      - /etc/localtime:/etc/localtime:ro
      # Configs
      - /var/lib/samba/run.sh:/run.sh:ro
      - /var/lib/samba/smb.conf:/etc/samba/smb-base.conf
      # Data
      - /var/data/home:/home
  sftpd:
    image: atmoz/sftp:alpine
    container_name: sftpd
    << : *service-defaults
    ports:
      - '2222:22'
    entrypoint: /run.sh
    volumes:
      # Configs
      - /var/lib/sftpd/secrets/ssh_host_ed25519_key:/etc/ssh/ssh_host_ed25519_key:ro
      - /var/lib/sftpd/secrets/ssh_host_rsa_key:/etc/ssh/ssh_host_rsa_key:ro
      - /var/lib/sftpd/sshd_config:/etc/ssh/sshd_config:ro
      - /var/lib/sftpd/run.sh:/run.sh:ro
      - /var/lib/sftpd/authelia.sh:/authelia.sh:ro
      - /var/lib/sftpd/base-auth:/etc/pam.d/base-auth:ro
      # Data
      - /var/data/home:/home
  homer:
    image: b4bz/homer
    container_name: homer
    << : *service-defaults
    user: '1000:1000'
    volumes:
      - /var/lib/homer:/www/assets
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.homer.rule=Host(`home.arhipov.net`)'
      - 'traefik.http.routers.homer.entrypoints=https'
  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    << : *service-defaults
    user: 1000:1000
    volumes:
      - /var/data/home:/srv
      - /var/lib/filebrowser:/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.files.loadbalancer.server.port=8080'
      - 'traefik.http.routers.files.rule=Host(`${DOMAIN}`)'
      - 'traefik.http.routers.files.entrypoints=https'
      - 'traefik.http.routers.files.middlewares=authelia@docker'
    command: 
      - "--cache-dir=/data/cache"
      - "-d=/data/filebrowser.db"
      - "-c=/data/filebrowser.json"
      - "-p=8080"
  qbittorrent:
    image: maltyxx/qbittorrent:latest
    container_name: qbittorrent
    << : *service-defaults
    user: 1000:1000
    ports:
      - 6881:6881/tcp
      - 6881:6881/udp
    volumes:
      - /var/lib/qbittorrent/config:/config
      - /var/data/shares/tmp:/downloads
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.torrents.loadbalancer.server.port=8080'
      - 'traefik.http.routers.torrents.rule=Host(`torrents.${DOMAIN}`)'
      - 'traefik.http.routers.torrents.entrypoints=https'
      - 'traefik.http.routers.torrents.middlewares=authelia@docker'
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    << : *service-defaults
    environment: &arr_env
      PUID: 1000
      PGID: 1000
      TZ: Europe/Riga
    volumes:
      - /var/lib/prowlarr/config:/config
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.prowlarr.loadbalancer.server.port=9696'
      - 'traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)'
      - 'traefik.http.routers.prowlarr.entrypoints=https'
      - 'traefik.http.routers.prowlarr.middlewares=authelia@docker'
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    << : *service-defaults
    environment: *arr_env
    volumes:
      - /var/lib/radarr/config:/config
      - /var/data/shares/tmp:/downloads
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.radarr.loadbalancer.server.port=7878'
      - 'traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)'
      - 'traefik.http.routers.radarr.entrypoints=https'
      - 'traefik.http.routers.radarr.middlewares=authelia@docker'
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    << : *service-defaults
    environment: *arr_env
    volumes:
      - /var/lib/sonarr/config:/config
      - /var/data/shares/tmp:/downloads
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.sonarr.loadbalancer.server.port=8989'
      - 'traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)'
      - 'traefik.http.routers.sonarr.entrypoints=https'
      - 'traefik.http.routers.sonarr.middlewares=authelia@docker'
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    << : *service-defaults
    environment: *arr_env
    volumes:
      - /var/lib/bazarr/config:/config
      - /var/data/shares/tmp:/downloads
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.bazarr.loadbalancer.server.port=6767'
      - 'traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)'
      - 'traefik.http.routers.bazarr.entrypoints=https'
      - 'traefik.http.routers.bazarr.middlewares=authelia@docker'
  jellyseerr:
    image: fallenbagel/jellyseerr:develop
    container_name: jellyseerr
    << : *service-defaults
    user: 1000:1000
    environment:
      TZ: Europe/Riga
    volumes:
      - /var/lib/jellyseerr:/app/config
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.jellyseerr.loadbalancer.server.port=5055'
      - 'traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.${DOMAIN}`)'
      - 'traefik.http.routers.jellyseerr.entrypoints=https'
      - 'traefik.http.routers.jellyseerr.middlewares=authelia@docker,jellyheaders'
      - 'traefik.http.middlewares.jellyheaders.headers.customrequestheaders.X-API-Key=MTY1NDcyMzQ0NDI4MDExYmE5MDA4LWE4NTQtNGQ1Mi1hN2FjLWVjZTA3OWRjMDkzZik='
      - 'traefik.http.middlewares.jellyheaders.headers.customrequestheaders.X-API-User=4'
  syncthing:
    image: syncthing/syncthing
    container_name: syncthing
    << : *service-defaults
    user: 1000:1000
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    environment:
      TZ: Europe/Riga
    volumes:
      - /var/lib/syncthing/nikarh:/var/syncthing/config
      - /var/data/shares/nikarh:/var/data/shares/nikarh
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.syncthing.loadbalancer.server.port=8384'
      - 'traefik.http.routers.syncthing.rule=Host(`syncthing.${DOMAIN}`)'
      - 'traefik.http.routers.syncthing.entrypoints=https'
      - 'traefik.http.routers.syncthing.middlewares=authelia@docker'
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    << : *service-defaults
    user: 1000:1000
    group_add:
      - "989" # render
      - "985" # video
    ports:
      - 1900:1900/udp # autodiscovery
      - 7359:7359/udp # autodiscovery
    devices:
      - /dev/dri:/dev/dri
    environment:
      JELLYFIN_PublishedServerUrl: https://media.${DOMAIN}
    volumes:
      - /var/lib/jellyfin/config:/config:rw
      - /var/lib/jellyfin/cache:/cache:rw
      - /var/data/shares/tmp:/media:ro
      - /var/data/shares/nikarh/Music:/music
      - /var/data/shares/nikarh/Videos:/nikarh/videos
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.jellyfin.loadbalancer.server.port=8096'
      - 'traefik.http.routers.jellyfin.rule=Host(`media.${DOMAIN}`)'
      - 'traefik.http.routers.jellyfin.entrypoints=https'
  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    << : *service-defaults
    user: 1000:1000
    environment:
      PHOTOPRISM_ORIGINALS_LIMIT: 1000               # File size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # Improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DEBUG: "false"                      # Run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "true"                      # No authentication required (disables password protection)
      PHOTOPRISM_SPONSOR: "true"
      PHOTOPRISM_READONLY: "true"                    # Don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "true"                # Enables experimental featuress
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # Allow uploads that MAY be offensive
      PHOTOPRISM_DATABASE_DRIVER: "sqlite"           # SQLite is an embedded database that doesn't require a servers
      PHOTOPRISM_DATABASE_DSN: "/photoprism/database/db.sqlite"
      PHOTOPRISM_SITE_URL: "https://photos.${DOMAIN}/"  # Public PhotoPrism URL
      PHOTOPRISM_SITE_TITLE: "Photos"
      PHOTOPRISM_SITE_CAPTION: "My photos"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: ""
    volumes:
      - /var/data/shares/nikarh/Pictures:/photoprism/originals:ro
      - /var/lib/photoprism/import:/photoprism/import
      - /var/lib/photoprism/storage:/photoprism/storage
      - /var/lib/photoprism/database:/photoprism/database
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.photoprism.loadbalancer.server.port=2342'
      - 'traefik.http.routers.photoprism.rule=Host(`photos.${DOMAIN}`)'
      - 'traefik.http.routers.photoprism.entrypoints=https'
      - 'traefik.http.routers.photoprism.middlewares=authelia@docker'
  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: netdata
    << : *service-defaults
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    environment:
      DISABLE_TELEMETRY: 1
      DOCKER_USR: 1000
      DOCKER_GRP: 1000
    volumes:
      - /var/lib/netdata/config:/etc/netdata
      - /var/lib/netdata/lib:/var/lib/netdata
      - /var/lib/netdata/cache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.netdata.loadbalancer.server.port=19999'
      - 'traefik.http.routers.netdata.rule=Host(`netdata.${DOMAIN}`)'
      - 'traefik.http.routers.netdata.entrypoints=https'
      - 'traefik.http.routers.netdata.middlewares=authelia@docker'
