name: Build & publish docker images

on:
  push:
    branches: ["master"]
  schedule:
    - cron: '0 2 * * 0' # Weekly on Sundays at 02:00
  workflow_dispatch:


# Allow one concurrent deployment
concurrency:
  group: "docker"
  cancel-in-progress: true

jobs:
  dockerfile-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Find all Dockerfiles
        id: find
        run: echo context=[$(find -name 'Dockerfile' -exec dirname {} \; | xargs -I{} echo "\"{}\"" | paste -sd "," -)] >> $GITHUB_OUTPUT
    outputs:
      contexts: ${{ steps.find.outputs.context }}
  images:
    runs-on: ubuntu-latest
    needs:
      - dockerfile-matrix
    strategy:
      fail-fast: true
      matrix:
        context: ${{ fromJSON(needs.dockerfile-matrix.outputs.contexts) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Generate image name
        id: imagename
        run: echo imagename="$(basename ${{ matrix.context }})" >> $GITHUB_OUTPUT
      - name: Docker meta
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: nikarh/dotfiles-${{ steps.imagename.outputs.imagename }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          context: ${{ matrix.context }}
          tags: ${{ steps.meta.outputs.tags }}
          push: true