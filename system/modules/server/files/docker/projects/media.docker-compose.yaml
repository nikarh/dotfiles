x-arr-env: &arr_env
  PGID: 1000
  PUID: 1000
  TZ: Europe/Riga
x-service-defaults: &service-defaults
  restart: unless-stopped
  logging:
    driver: "json-file"
    options:
      max-size: ${LOG_MAX_SIZE:-200k}
      max-file: ${LOG_MAX_FILE:-5}
  healthcheck:
    disable: true
volumes:
  jellyfin-config:
  kavita-data:
  qbittorrent-data:
  qbittorrent-unsafe-data:
  prowlarr-data:
  radarr-data:
  sonarr-data:
  bazarr-data:
  readarr-data:
  jellyseerr-data:
  bitmagnet-db:
services:
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:10.9.2
    container_name: jellyfin
    <<: *service-defaults
    group_add:
      - "989" # render
      - "985" # video
    ports:
      - 1900:1900/udp # autodiscovery
      - 7359:7359/udp # autodiscovery
    networks:
      default: {}
      macvlan:
        ipv4_address: 192.168.1.254
    devices:
      - /dev/dri:/dev/dri
    environment:
      <<: *arr_env
      JELLYFIN_PublishedServerUrl: https://media.${DOMAIN}
    volumes:
      - jellyfin-config:/config
      - /var/data/shares/tmp:/media:ro
      - /var/data/shares/nikarh/Music:/music
      - /var/data/shares/nikarh/Videos:/nikarh/videos
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=files_default"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.http.routers.jellyfin.rule=Host(`media.${DOMAIN}`) || Host(`j.u8.lv`)"
      - "traefik.http.routers.jellyfin.entrypoints=https"
  # Book UI
  kavita:
    image: jvmilazz0/kavita
    container_name: kavita
    <<: *service-defaults
    environment:
      TZ: Europe/Riga
    volumes:
      - /var/data/shares/tmp/Books:/books
      - kavita-data:/kavita/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.kavita.loadbalancer.server.port=5000"
      - "traefik.http.routers.kavita.rule=Host(`kavita.${DOMAIN}`)"
      - "traefik.http.routers.kavita.entrypoints=https"
      # Has it's own auth, does not support any alternative auth or auto-login.
      # TODO: Pass constant authorization header? Does it expire?
      # - 'traefik.http.routers.photoprism.middlewares=authelia@docker'
  tunnel:
    image: qmcgaw/gluetun:v3
    container_name: tunnel
    <<: *service-defaults
    cap_add:
      - NET_ADMIN
    ports:
      # Plain-text socks5 proxy
      - 1080:1080/tcp
      # Plain-text HTTP Proxy
      - 8888:8888/tcp
      # Shadowsocks encrypted prox
      - 8388:8388/tcp
      - 8388:8388/udp
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - VPN_ENDPOINT_IP=${WIREGUARD_ENDPOINT_IP}
      - VPN_ENDPOINT_PORT=${WIREGUARD_ENDPOINT_PORT}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PRESHARED_KEY=${WIREGUARD_PRESHARED_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - FIREWALL_VPN_INPUT_PORTS=${WIREGUARD_INPUT_PORTS}
      # - FIREWALL_OUTBOUND_SUBNETS=172.31.254.2/32
      - HTTPPROXY=on
      - SHADOWSOCKS=on
    devices:
      - /dev/net/tun:/dev/net/tun
    # networks:
    # default:
    # bitmagnet-postgres:
  socks5:
    image: serjs/go-socks5-proxy
    container_name: socks5-proxy
    <<: *service-defaults
    network_mode: "service:tunnel"
    depends_on:
      - tunnel
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    <<: *service-defaults
    environment:
      DOCKER_MODS: ghcr.io/gabe565/linuxserver-mod-vuetorrent
      <<: *arr_env
    volumes:
      - qbittorrent-data:/config
      - /var/data/shares/tmp:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.torrents.loadbalancer.server.port=8080"
      - "traefik.http.routers.torrents.rule=Host(`torrents.${DOMAIN}`) && !Path(`/sw.js`) && !Path(`/registerSW.js`)"
      - "traefik.http.routers.torrents.entrypoints=https"
      - "traefik.http.routers.torrents.middlewares=authelia@docker"
    network_mode: "service:tunnel"
    depends_on:
      - tunnel
  # bitmagnet:
  #   image: ghcr.io/bitmagnet-io/bitmagnet:latest
  #   container_name: bitmagnet
  #   <<: *service-defaults
  #   environment:
  #     POSTGRES_HOST: localhost
  #     POSTGRES_PASSWORD: postgres
  #   command:
  #     - worker
  #     - run
  #     - --keys=http_server
  #     - --keys=queue_server
  #     - --keys=dht_crawler
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.bitmagnet.loadbalancer.server.port=3333"
  #     - "traefik.http.routers.bitmagnet.rule=Host(`bitmagnet.${DOMAIN}`)"
  #     - "traefik.http.routers.bitmagnet.entrypoints=https"
  #     - "traefik.http.routers.bitmagnet.middlewares=authelia@docker"
  #   network_mode: "service:tunnel"
  #   depends_on:
  #     bitmagnet-postgres:
  #       condition: service_healthy
  #     tunnel:
  #       condition: service_started
  # bitmagnet-postgres:
  #   image: postgres:16-alpine
  #   container_name: bitmagnet-postgres
  #   <<: *service-defaults
  #   volumes:
  #     - bitmagnet-db:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: bitmagnet
  #     PGUSER: postgres
  #   shm_size: 1g
  #   healthcheck:
  #     test:
  #       - CMD-SHELL
  #       - pg_isready
  #     start_period: 10s
  #     interval: 5s
  #   # networks:
  #     # bitmagnet-postgres:
  #       # ipv4_address: 172.31.254.2
  #   network_mode: "service:tunnel"
  qbittorrent-raw:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent-raw
    <<: *service-defaults
    environment:
      DOCKER_MODS: ghcr.io/gabe565/linuxserver-mod-vuetorrent
      <<: *arr_env
    ports:
      - 49152:49152/tcp
      - 49152:49152/udp
    volumes:
      - qbittorrent-unsafe-data:/config
      - /var/data/shares/tmp:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.torrents-raw.loadbalancer.server.port=8080"
      - "traefik.http.routers.torrents-raw.rule=Host(`torrents-raw.${DOMAIN}`) && !Path(`/sw.js`) && !Path(`/registerSW.js`)"
      - "traefik.http.routers.torrents-raw.entrypoints=https"
      - "traefik.http.routers.torrents-raw.middlewares=authelia@docker"
  # Indexer manager
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    <<: *service-defaults
    environment: *arr_env
    volumes:
      - prowlarr-data:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.routers.prowlarr.entrypoints=https"
      - "traefik.http.routers.prowlarr.middlewares=authelia@docker"
  # Cloudflare solver for prowlarr
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    <<: *service-defaults
    environment:
      <<: *arr_env
      LOG_LEVEL: info
      LOG_HTML: "false"
      CAPTCHA_SOLVER: none
  # Movie manager
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    <<: *service-defaults
    environment: *arr_env
    volumes:
      - radarr-data:/config
      - /var/data/shares/tmp:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr.entrypoints=https"
      - "traefik.http.routers.radarr.middlewares=authelia@docker"
  # Show manager
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    <<: *service-defaults
    environment: *arr_env
    volumes:
      - sonarr-data:/config
      - /var/data/shares/tmp:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.entrypoints=https"
      - "traefik.http.routers.sonarr.middlewares=authelia@docker"
  # Subtitle manager
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    <<: *service-defaults
    environment: *arr_env
    volumes:
      - bazarr-data:/config
      - /var/data/shares/tmp:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)"
      - "traefik.http.routers.bazarr.entrypoints=https"
      - "traefik.http.routers.bazarr.middlewares=authelia@docker"
  # Book manager
  readarr:
    image: hotio/readarr:testing
    container_name: readarr
    <<: *service-defaults
    environment: *arr_env
    volumes:
      - readarr-data:/config
      - /var/data/shares/tmp:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
      - "traefik.http.routers.readarr.rule=Host(`readarr.${DOMAIN}`)"
      - "traefik.http.routers.readarr.entrypoints=https"
      - "traefik.http.routers.readarr.middlewares=authelia@docker"
  # Movie/show request manager
  jellyseerr:
    image: fallenbagel/jellyseerr:develop
    container_name: jellyseerr
    <<: *service-defaults
    environment:
      TZ: Europe/Riga
    volumes:
      - jellyseerr-data:/app/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.${DOMAIN}`)"
      - "traefik.http.routers.jellyseerr.entrypoints=https"
      # We leverage authelia, autologin here until https://github.com/Fallenbagel/jellyseerr/pull/184 is merged
      # - 'traefik.http.routers.jellyseerr.middlewares=authelia@docker,jellyheaders'
      # - 'traefik.http.middlewares.jellyheaders.headers.customrequestheaders.X-API-Key=MTY4OTIzMjU4NzYxOGY2ZjU5MDRkLWExZTctNDNiMy1iZTgwLWVhZTk5YTIxNjlmNw=='
      # - 'traefik.http.middlewares.jellyheaders.headers.customrequestheaders.X-API-User=2'

networks:
  bitmagnet-postgres:
    ipam:
      driver: default
      config:
        - subnet: 172.31.254.0/24
  macvlan:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.1.252/30
