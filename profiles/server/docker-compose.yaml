version: '3.5'

services:
  sftpd:
    image: atmoz/sftp
    container_name: sftpd
    restart: unless-stopped
    ports:
      - '2222:22'
    volumes:
      - /etc/sftp/ssh_host_ed25519_key:/etc/ssh/ssh_host_ed25519_key:ro
      - /etc/sftp/ssh_host_rsa_key:/etc/ssh/ssh_host_rsa_key:ro
      - /etc/sftp/users.conf:/etc/sftp/users.conf:ro
      - /var/data/shares/tmp:/home/tmp
      - /var/data/shares/nikarh:/home/nikarh/data
      - /var/data/shares/tmp:/home/nikarh/tmp
      - /var/data/shares/alyonovik:/home/alyonovik/data
      - /var/data/shares/tmp:/home/alyonovik/tmp
  hass:
    image: homeassistant/home-assistant:stable
    container_name: hass
    restart: unless-stopped
    ports:
      - '127.0.0.1:25001:8080'
    volumes:
      - /var/lib/hass:/config
      - /etc/localtime:/etc/localtime:ro
  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    restart: unless-stopped
    user: '1000:1000'
    command: 
      - "--cache-dir=/data/cache"
      - "-d=/data/filebrowser.db"
      - "-c=/data/filebrowser.json"
      - "-p=8080"
    ports:
      - '127.0.0.1:25002:8080'
    volumes:
      - /var/data/shares/nikarh:/srv/nikarh/data
      - /var/data/shares/tmp:/srv/nikarh/tmp
      - /var/data/shares/alyonovik:/srv/alyonovik/data
      - /var/data/shares/tmp:/srv/alyonovik/tmp
      - /var/lib/filebrowser:/data
  navidrome:
    image: deluan/navidrome:latest
    container_name: navidrome
    user: 1000:1000
    restart: unless-stopped
    ports:
      - "25003:4533"
    volumes:
      - "/var/lib/navidrome:/data"
      - "/var/data/shares/nikarh/Music:/music:ro"
  qbittorrent:
    image: maltyxx/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      - TZ=Europe/Riga
      - QBITTORRENT_UID=1000
      - QBITTORRENT_GID=1000
    ports:
      - 127.0.0.1:25004:8080
      - 6881:6881/tcp
      - 6881:6881/udp
    volumes:
      - /var/lib/qbittorrent/config:/qbittorrent/config
      - /var/lib/qbittorrent/data/:/qbittorrent/data
      - /var/data/shares/tmp:/downloads

    # Example Docker Compose config file for PhotoPrism (Linux / AMD64)
    #
    # Documentation : https://docs.photoprism.org/getting-started/docker-compose/
    # Docker Hub URL: https://hub.docker.com/r/photoprism/photoprism/
    #
    # Please run behind a reverse proxy like Caddy, Traefik or Nginx if you need HTTPS / SSL support
    # e.g. when running PhotoPrism on a public server outside your home network.
    #
    # ------------------------------------------------------------------
    # DOCKER COMPOSE COMMAND REFERENCE
    # ------------------------------------------------------------------
    # Start    | docker-compose up -d
    # Stop     | docker-compose stop
    # Update   | docker-compose pull
    # Logs     | docker-compose logs --tail=25 -f
    # Terminal | docker-compose exec photoprism bash
    # Help     | docker-compose exec photoprism photoprism help
    # Config   | docker-compose exec photoprism photoprism config
    # Reset    | docker-compose exec photoprism photoprism reset
    # Backup   | docker-compose exec photoprism photoprism backup -a -i
    # Restore  | docker-compose exec photoprism photoprism restore -a -i
    # Index    | docker-compose exec photoprism photoprism index
    # Reindex  | docker-compose exec photoprism photoprism index -a
    # Import   | docker-compose exec photoprism photoprism import
    # -------------------------------------------------------------------
    # Note: All commands may have to be prefixed with "sudo" when not running as root.
    #       This will change the home directory "~" to "/root" in your configuration.

  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    restart: unless-stopped
    ports:
      - 2342:2342
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: "insecure"          # PLEASE CHANGE: Your initial admin password (min 4 characters)
      PHOTOPRISM_ORIGINALS_LIMIT: 1000               # File size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # Improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DEBUG: "false"                      # Run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "false"                     # No authentication required (disables password protection)
      PHOTOPRISM_READONLY: "false"                   # Don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # Enables experimental features
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # Disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # Disables Settings in Web UI
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # Disables using TensorFlow for image classification
      PHOTOPRISM_DARKTABLE_PRESETS: "false"          # Enables Darktable presets and disables concurrent RAW conversion
      PHOTOPRISM_DETECT_NSFW: "false"                # Flag photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # Allow uploads that MAY be offensive
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # Use MariaDB (or MySQL) instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB database user name
      PHOTOPRISM_DATABASE_PASSWORD: "insecure"       # MariaDB database user password
      PHOTOPRISM_SITE_URL: "http://files.home.arhipov.net:2342/"  # Public PhotoPrism URL
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "Browse Your Life"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: ""
    user: "1000:1000"
    volumes:
      - /var/data/shares/nikarh/Pictures:/photoprism/originals:ro
      - /var/photoprism/import:/photoprism/import
      - /var/photoprism/storage:/photoprism/storage
  mariadb:
    image: mariadb:10.5
    container_name: mariadb
    restart: unless-stopped
    command: mysqld --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=50
    volumes: 
      - "/var/photoprism/database:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: please_change
      MYSQL_DATABASE: photoprism
      MYSQL_USER: photoprism
      MYSQL_PASSWORD: insecure

# Uncomment the following lines to upgrade automatically, whenever there is a new Docker image available:
#
#  watchtower:
#    image: containrrr/watchtower
#    container_name: watchtower
#    restart: unless-stopped
#    environment:
#      WATCHTOWER_CLEANUP: "true"
#      WATCHTOWER_POLL_INTERVAL: 7200 # Checks for updates every two hours
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#      - "~/.docker/config.json:/config.json" # Optional, for authentication if you have a Docker Hub account
