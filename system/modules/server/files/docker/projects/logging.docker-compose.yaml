x-common-env: &common_env
  PGID: 1000
  PUID: 1000
  TZ: Europe/Riga
x-common-service-defaults: &common-service-defaults
  restart: unless-stopped
  logging:
    driver: "json-file"
    options:
      max-size: ${LOG_MAX_SIZE:-200k}
      max-file: ${LOG_MAX_FILE:-5}
volumes:
  vector-logs:
  fail2ban-db:
  loki-data:
  grafana-data:
services:
  vector:
    image: timberio/vector:latest-alpine
    container_name: vector
    <<: *common-service-defaults
    environment:
      VECTOR_OPENSSL_LEGACY_PROVIDER: "false"
      TZ: Europe/Riga
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - /var/lib/docker-services/volumes/vector:/etc/vector
      - vector-logs:/out
  loki:
    image: grafana/loki:latest
    container_name: loki
    <<: *common-service-defaults
    volumes:
      - /var/lib/docker-services/volumes/loki:/etc/loki:ro
      - loki-data:/loki
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    <<: *common-service-defaults
    user: "1000"
    environment:
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_AUTH_ANONYMOUS_ENABLED: "false"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_BASIC_ENABLED: "false"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_USERS_AUTO_ASSIGN_ORG: "true"
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: "Admin"
      GF_AUTH_PROXY_ENABLED: "true"
      GF_AUTH_PROXY_HEADER_NAME: "Remote-User"
      GF_AUTH_PROXY_HEADERS: "Name:Remote-Name Email:Remote-Email Groups:Remote-Groups"
      GF_AUTH_PROXY_AUTO_SIGN_UP: "true"
    volumes:
      - grafana-data:/var/lib/grafana
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.middlewares=authelia@docker"
  logrotate:
    image: linkyard/logrotate
    container_name: logrotate
    <<: *common-service-defaults
    environment:
      LOGROTATE_FILE_PATTERN: "*.log"
      LOGROTATE_ROTATE: "0"
      LOGROTATE_TRUNCATE: "copytruncate"
      LOGROTATE_CRON: "*/5 0 0 0 0"
      LOGROTATE_SIZE: "10M"
    volumes:
      - vector-logs:/logs
  init-fail2ban-volume:
    image: alpine
    command: >
      sh -c "
        mkdir -p /db/fail2ban;
        chown 1000:1000 /db/fail2ban;
      "
    volumes:
      - fail2ban-db:/db
  fail2ban:
    image: lscr.io/linuxserver/fail2ban:latest
    container_name: fail2ban
    <<: *common-service-defaults
    cap_add:
      - NET_ADMIN
      - NET_RAW
    network_mode: host
    environment:
      <<: *common_env
      VERBOSITY: -vvv
    volumes:
      - /var/lib/docker-services/volumes/fail2ban/jail.local:/config/fail2ban/jail.local:ro
      - /var/lib/docker-services/volumes/fail2ban/fail2ban.local:/config/fail2ban/fail2ban.local:ro
      - vector-logs:/remotelogs:ro
      - fail2ban-db:/db
    depends_on:
      init-fail2ban-volume:
        condition: service_completed_successfully
